// <auto-generated />
using System;
using Fitz.Core.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fitz.Migrations
{
    [DbContext(typeof(BotContext))]
    partial class BotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Fitz.Core.Models.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountCreationBonusAmount")
                        .HasColumnType("int")
                        .HasColumnName("account_creation_bonus_amount");

                    b.Property<int>("BaseHappyHourAmount")
                        .HasColumnType("int")
                        .HasColumnName("happy_hour_base_amount");

                    b.Property<int>("BaseLotteryPool")
                        .HasColumnType("int")
                        .HasColumnName("lottery_pool");

                    b.Property<int>("LotteryDuration")
                        .HasColumnType("int")
                        .HasColumnName("lottery_duration");

                    b.Property<bool>("LotteryPoolRollover")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("pool_rollover");

                    b.Property<int>("MaxPendingPolls")
                        .HasColumnType("int")
                        .HasColumnName("max_pending_polls");

                    b.Property<int>("MaxTickets")
                        .HasColumnType("int")
                        .HasColumnName("max_tickets");

                    b.Property<int>("PollApprovedBonus")
                        .HasColumnType("int")
                        .HasColumnName("poll_approved_bonus");

                    b.Property<int>("PollCreatorTip")
                        .HasColumnType("int")
                        .HasColumnName("poll_creator_tip");

                    b.Property<int>("PollDeclinedPenalty")
                        .HasColumnType("int")
                        .HasColumnName("poll_declined_penalty");

                    b.Property<int>("PollSubmittedPenalty")
                        .HasColumnType("int")
                        .HasColumnName("poll_submitted_penalty");

                    b.Property<int>("PollVote")
                        .HasColumnType("int")
                        .HasColumnName("poll_vote");

                    b.Property<int>("RenameBaseCost")
                        .HasColumnType("int")
                        .HasColumnName("rename_base_cost");

                    b.Property<int>("TicketCost")
                        .HasColumnType("int")
                        .HasColumnName("ticket_cost");

                    b.HasKey("Id");

                    b.ToTable("settings");
                });

            modelBuilder.Entity("Fitz.Core.Services.Features.FeatureStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enabled");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("feature_status");
                });

            modelBuilder.Entity("Fitz.Core.Services.Jobs.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastExecution")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_execution");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("job");
                });

            modelBuilder.Entity("Fitz.Features.Accounts.Models.Account", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<int>("Beer")
                        .HasColumnType("int")
                        .HasColumnName("beer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<bool>("Deactivated")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deactivated");

                    b.Property<int>("Favorability")
                        .HasColumnType("int")
                        .HasColumnName("favorability");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_active");

                    b.Property<DateTime>("LastSeenDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_seen");

                    b.Property<int>("LifetimeBeer")
                        .HasColumnType("int")
                        .HasColumnName("lifetime_beer");

                    b.Property<int>("SubscribeTickets")
                        .HasColumnType("int")
                        .HasColumnName("subscribe_tickets");

                    b.Property<string>("Username")
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.Property<int>("safeBalance")
                        .HasColumnType("int")
                        .HasColumnName("safe_balance");

                    b.Property<bool>("subscribeToLottery")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("lottery_subscribe");

                    b.HasKey("Id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Fitz.Features.Bank.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("reason");

                    b.Property<ulong>("Recipient")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("recipient");

                    b.Property<ulong>("Sender")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("sender");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.ToTable("trasnactions");
                });

            modelBuilder.Entity("Fitz.Features.Blackjack.Modals.BlackjackGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeckJson")
                        .HasColumnType("longtext")
                        .HasColumnName("deck_json");

                    b.Property<DateTime?>("Ended")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ended");

                    b.Property<int>("Jackpot")
                        .HasColumnType("int")
                        .HasColumnName("jackpot");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("message_id");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("started");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated");

                    b.HasKey("Id");

                    b.ToTable("blackjack_games");
                });

            modelBuilder.Entity("Fitz.Features.Blackjack.Modals.BlackjackPlayers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bet")
                        .HasColumnType("int")
                        .HasColumnName("bet");

                    b.Property<string>("CardsJson")
                        .HasColumnType("longtext")
                        .HasColumnName("cards_json");

                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("game_id");

                    b.Property<bool>("HasTurn")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hasTurn");

                    b.Property<bool>("IsBusted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isBusted");

                    b.Property<bool>("IsDealer")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isDealer");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isWinner");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("account_id");

                    b.HasKey("Id");

                    b.ToTable("blackjack_players");
                });

            modelBuilder.Entity("Fitz.Features.Lottery.Models.Lottery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CurrentLottery")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("current");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_date");

                    b.Property<int?>("Pool")
                        .HasColumnType("int")
                        .HasColumnName("pool");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.Property<int?>("WinningTicket")
                        .HasColumnType("int")
                        .HasColumnName("winning_ticket");

                    b.HasKey("Id");

                    b.ToTable("lottery");
                });

            modelBuilder.Entity("Fitz.Features.Lottery.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("AccountId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("account_id");

                    b.Property<int>("Drawing")
                        .HasColumnType("int")
                        .HasColumnName("drawing");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("Fitz.Features.Lottery.Models.Winners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("AccountId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("account_id");

                    b.Property<int>("Drawing")
                        .HasColumnType("int")
                        .HasColumnName("drawing_id");

                    b.Property<int>("Payout")
                        .HasColumnType("int")
                        .HasColumnName("payout");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.Property<int>("WinningTicketId")
                        .HasColumnType("int")
                        .HasColumnName("winning_ticket");

                    b.HasKey("Id");

                    b.ToTable("winners");
                });

            modelBuilder.Entity("Fitz.Features.Polls.Models.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("AccountId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("account_id");

                    b.Property<DateTime?>("EvaluatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("evaluated_on");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("message_id");

                    b.Property<string>("Question")
                        .HasColumnType("longtext")
                        .HasColumnName("question");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("submitted_on");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("polls");
                });

            modelBuilder.Entity("Fitz.Features.Polls.Models.PollOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .HasColumnType("longtext")
                        .HasColumnName("answer");

                    b.Property<ulong?>("EmojiId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("emoji_id");

                    b.Property<string>("EmojiName")
                        .HasColumnType("longtext")
                        .HasColumnName("emoji_name");

                    b.Property<int>("PollId")
                        .HasColumnType("int")
                        .HasColumnName("poll_id");

                    b.HasKey("Id");

                    b.ToTable("poll_options");
                });

            modelBuilder.Entity("Fitz.Features.Polls.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Choice")
                        .HasColumnType("int")
                        .HasColumnName("poll_option_id");

                    b.Property<int>("PollId")
                        .HasColumnType("int")
                        .HasColumnName("poll_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("votes");
                });

            modelBuilder.Entity("Fitz.Features.Rename.Models.Renames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("AffectedUserId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("affected_user_id");

                    b.Property<int>("Cost")
                        .HasColumnType("int")
                        .HasColumnName("cost");

                    b.Property<int?>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires");

                    b.Property<string>("NewName")
                        .HasColumnType("longtext")
                        .HasColumnName("new_name");

                    b.Property<bool>("Notified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("notified");

                    b.Property<string>("OldName")
                        .HasColumnType("longtext")
                        .HasColumnName("old_name");

                    b.Property<ulong>("RequestedUserId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("requested_user_id");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.ToTable("renames");
                });
#pragma warning restore 612, 618
        }
    }
}
